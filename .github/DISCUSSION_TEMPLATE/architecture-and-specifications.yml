body:
  - type: markdown
    attributes:
      value: |
        ## Architecture and Specifications

        This form provides a **template** for the architectural specification of a module, model or library. It is intended to provide a structured way to document the architecture and specifications of a planned workpiece.

        > [!TIP]
        > It is normal to not have details for each section in the template at this stage of the architecture process. Please fill out the form to the best of your ability, any blank sections can be filled in later.
        >
        > Any headings or sections that are not applicable to your specification can be removed.

        In lieu of internal links (currently a limitation of Discussions), it is recommended that particularly large sections are wrapped in an expandable `<details>` element, like so:
        ```md
        ### Schema

        Brief description.

        <details><summary>See more...</summary>

        Expandable content (with a blank line seperating from the opening/closing tags)

        </details>
        ```
  - type: textarea
    attributes:
      label: Related Links
      description: |
        Link to the proposal discussion where this document was requested (if applicable), plus any other related discussions/issues.
      value: |
        **See also:**
        
        - Proposal: #
        - #
  - type: textarea
    attributes:
      label: Overview
      description: |
        Provide an overview of the intended purpose of the module, model or library, along with any overarching architectural decisions.
      value: |
        > ðŸš§ **This section is in-progress.**

        <!-- Create and link to a new Epic, to work on use cases (issues):
          https://github.com/hcsolutions/.github/issues/new?assignees=&labels=epic&projects=&template=3-epic.md&title=
        -->

        - <!-- Epic magi-link -->
        
        ---
  - type: textarea
    attributes:
      label: Service Design
      description: |
        Provide rough notes and/or detailed guidance on UX and service design considerations such as user flows, access patterns and design elements. Wireframes, mockups or design prototypes are welcome but almost never required.
      value: |
        > ðŸš§ **This section is in-progress.**

        ---
  - type: textarea
    attributes:
      label: Data Architecture
      description: |
        For a **high-level specification** (i.e. modules or libraries covering many models), provide details of the data architecture. For example table/model names, brief descriptions of each, and relationships between them. Provide links to supporting specifications where appropriate and an Entity Relationship Diagram (ERD) if possible.

        **DELETE IF NOT APPLICABLE**
      value: |
        > ðŸš§ **This section is in-progress.**

        <!-- ERD HERE -->

        <!--
        - #9999 - Brief description
        - ...

        ---
        -->
  - type: textarea
    id: schema
    attributes:
      label: Schema
      description: |
        For a **low-level specification** (i.e. individual models or small modules/libraries with only one or two models), provide details of the data structure such as table/model names, brief descriptions of each, and a structured specification of columns. Provide a migration snippet if appropriate.

        **DELETE IF NOT APPLICABLE**
      value: |
        > ðŸš§ **This section is in-progress.**

        <!--
        Fields in bold are IDs.
        Common type reference:
        uuid, string, integer, boolean, datetime, date, time, jsonb[], jsonb{}, decimal, text, bigint
        -->

        <!--
        - **`id`**\* _(`uuid`)_
        - **`tenant_id`**\* _(`bigint`)_
        - **`site_id`**\* _(`uuid`)_
        - `required_foo`\* _(`string`)_
            - Enum: `bar baz`
            - Further background for `required_foo` field.
        - `optional_bar` _(`string`)_
            - Further background for `optional_bar` field.
        - `timestamps`
        -->

        <!--
        #### Migration

        ```rb
        # create_table :foo_bar, primary_key: [:tenant_id, :id] do |t|
          # t.uuid :id, default: -> { "gen_random_uuid()" }, null: false
          # t.references :tenant, null: false, index: false
          # t.references :site, null: false, type: :uuid

          # t.timestamps

          # t.index :id
        # end
        ```

        ---
        -->
  - type: textarea
    attributes:
      label: Model Definition
      description: |
        For a **low-level specification**, provide key snippets and supporting context for the implementation of the model(s).

        **DELETE IF NOT APPLICABLE**
      value: |
        > ðŸš§ **This section is in-progress.**

        <!--
        ```rb
        # CONCERNS (Delete as appropriate)
        # ---
        # include Tenanted
        # include Removable
        # include Active
        # include Refinable
        # include Settings
        # include Trackable
        # include Versioned
        # include Notifiable

        # ASSOCIATIONS
        # ---
        # belongs_to :foo
        # has_one :bar
        # has_many :baz
        ```

        ---
        -->
  - type: textarea
    attributes:
      label: Routes & Actions
      description: |
        For a **low-level specification**, provide details and supporting context for the routes and controller actions required for this workpiece. Include details about routing/controller concerns where appropriate.

        **DELETE IF NOT APPLICABLE**
      value: |
        > ðŸš§ **This section is in-progress.**

        <!--
        [[ WORKPIECE ]] will be accessible as a [[top-level | nested]] resource under the [[ --- ]] navigation group. A [[ NAMESPACED_MODEL]] resource will need the following routes and respective controller actions:
        - `GET :index` (`/bar/foo/:tab`)
        - `GET :show` (`.../:id`)
        - `POST :_show` (`.../:id`)
        - `POST :_new` (`.../new`)
        - `POST :create` (`...`)
        - `POST :_edit` (`.../edit`)
        - `PATCH :update` (`...`)
        - `PATCH :remove` (`.../remove`)

        ---
        -->
  - type: textarea
    attributes:
      label: Concerns & Mix-Ins
      description: |
        For a **low-level specification**, provide details or rough notes of any general-purpose concerns or mix-ins that are required for the implementation of this workpiece. For example, model concerns and supporting modules, controls, helpers etc.

        **DELETE IF NOT APPLICABLE**
      value: |
        > ðŸš§ **This section is in-progress.**

        <!--
        - **Model Concerns:**
          - `Fooable` - Description of `Fooable`
            - Additional notes and API specification.
            - ...
        - **Controls:**
          - `FooControls` - Description of `FooControls`
            - Additional notes and API specification.
            - ...
        - **Helpers:**
          - `ApplicationHelper#foo` _(`args, **opts`)_
            - Description of `#foo` and additional notes
            - Specification of `opts`
          - `FooHelper#bar` _(`args, **opts`)_
            - Description of `#bar` and additional notes
            - Specification of `opts`
        
        ---
        -->
  - type: textarea
    attributes:
      label: Jobs & Services
      description: |
        Provide details and supporting context for any background jobs or service objects required by this workpiece.
      value: |
        > ðŸš§ **This section is in-progress.**

        <!--
        #### `FooJob`

        **Scheduling:** ... (queue and frequency)
        **Inputs:** ...

        Brief Description of `FooJob` including service calls and conditional logic if appropriate.


        #### `FooService`

        **Inputs:** ...
        **Success Outputs:** ...
        **Side Effects:** ...

        Details of `FooService`'s intended purpose and logic, with psuedocode where appropriate.

        Details of `FooService`'s error and exception handling.
        
        ---
        -->
  - type: textarea
    attributes:
      label: Rollout
      description: |
        Provide details or rough notes of any tasks necessary to support deployment and rollout of the changes detailed in this specification. This may include tasks such as data cleansing/imports, setting configuration or stakeholder training.
      value: |
        > ðŸš§ **This section is in-progress.**
  - type: textarea
    attributes:
      label: Questions
      description: |
        Provide a list of questions that need to be answered before the specification can be considered complete. Some questions may require BA input, others may be technical.

        Discussion comments may be a more appropriate place for some questions, particularly if they are open-ended or require a wider discussion. The outcomes of such questions can be incorporated into the specification body later, such as by linking from this section and providing a summary.
      value: |
        <!--
        ### Business

        ...Question?

        > _Answer_
        
        ### Technical
        
        - [Summary](link/to/discussion/comment)
          - Summarised outcome
        -->
